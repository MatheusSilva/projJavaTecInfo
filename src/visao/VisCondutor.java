/*
 * VisCondutor.java
 *
 * Created on 04/05/2011, 00:01:20
 */
package visao;

import negocio.NegAutomovel;
import negocio.NegCondutor;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import persistencia.PerAutomovel;
import persistencia.PerCondutor;

/**
 * Classe VisCondutor da camada de visao
 * 
 * @version 2.3 beta
 * @author Matheus Souza da Silva
 * @since 04/05/2011
 */
public class VisCondutor extends javax.swing.JInternalFrame {

    /**
    *
    * MÃ©todo construtor da camada de visao
    * 
    * @version 2.3 beta
    * @author Matheus Souza da Silva
    * @since 04/05/2011
    */
    public VisCondutor() 
    {
        initComponents();
        this.preencheCombo();
    }//public VisCondutor()

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgSexo = new javax.swing.ButtonGroup();
        jlNome = new javax.swing.JLabel();
        jlSobrenome = new javax.swing.JLabel();
        jlRg = new javax.swing.JLabel();
        jlCpf = new javax.swing.JLabel();
        jlDatanascimento = new javax.swing.JLabel();
        jlCnh = new javax.swing.JLabel();
        jtNome = new javax.swing.JTextField();
        jtSobrenome = new javax.swing.JTextField();
        jtRg = new javax.swing.JTextField();
        jtCpf = new javax.swing.JTextField();
        jtCnh = new javax.swing.JTextField();
        jcbMarca = new javax.swing.JComboBox<String>();
        jbCadastrar = new javax.swing.JButton();
        jbVisualizar = new javax.swing.JButton();
        jbLimpar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableCondutor = new javax.swing.JTable();
        jrbMasculino = new javax.swing.JRadioButton();
        jrbFeminino = new javax.swing.JRadioButton();
        jlSexo = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jcbDia = new javax.swing.JComboBox();
        jcbMes = new javax.swing.JComboBox();
        jcbAno = new javax.swing.JComboBox();
        jlMarca = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Cadastro de Condutor");
        setPreferredSize(new java.awt.Dimension(1000, 670));

        jlNome.setText("Nome");

        jlSobrenome.setText("Sobrenome");

        jlRg.setText("Rg");

        jlCpf.setText("Cpf");

        jlDatanascimento.setText("Data De nascimento");

        jlCnh.setText("Cnh");

        jcbMarca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbMarcaActionPerformed(evt);
            }
        });

        jbCadastrar.setText("Cadastrar");
        jbCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCadastrarActionPerformed(evt);
            }
        });

        jbVisualizar.setText("Visualizar");
        jbVisualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbVisualizarActionPerformed(evt);
            }
        });

        jbLimpar.setText("Limpar");
        jbLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbLimparActionPerformed(evt);
            }
        });

        jScrollPane1.setPreferredSize(new java.awt.Dimension(452, 330));

        jTableCondutor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo Condutor", "Sexo", "Nome", "Sobrenome", "Rg", "Cpf", "data nascimento", "cnh", "Placa"
            }
        ));
        jScrollPane1.setViewportView(jTableCondutor);
        if (jTableCondutor.getColumnModel().getColumnCount() > 0) {
            jTableCondutor.getColumnModel().getColumn(0).setResizable(false);
            jTableCondutor.getColumnModel().getColumn(1).setResizable(false);
            jTableCondutor.getColumnModel().getColumn(2).setResizable(false);
            jTableCondutor.getColumnModel().getColumn(3).setResizable(false);
            jTableCondutor.getColumnModel().getColumn(4).setResizable(false);
            jTableCondutor.getColumnModel().getColumn(5).setResizable(false);
            jTableCondutor.getColumnModel().getColumn(6).setResizable(false);
            jTableCondutor.getColumnModel().getColumn(7).setResizable(false);
            jTableCondutor.getColumnModel().getColumn(8).setResizable(false);
        }

        bgSexo.add(jrbMasculino);
        jrbMasculino.setSelected(true);
        jrbMasculino.setText("Masculino");
        jrbMasculino.setActionCommand("Masculino");

        bgSexo.add(jrbFeminino);
        jrbFeminino.setText("Feminino");
        jrbFeminino.setActionCommand("Feminino");

        jlSexo.setText("Sexo");

        jLabel3.setText("Dia");

        jLabel4.setText("Mes");

        jLabel5.setText("Ano");

        jcbDia.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        jcbMes.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));

        jcbAno.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1900", "1901", "1902", "1903", "1904", "1905", "1906", "1907", "1908", "1909", "1910", "1911", "1912", "1913", "1914", "1915", "1916", "1917", "1918", "1919", "1920", "1921", "1922", "1923", "1924", "1925", "1926", "1927", "1928", "1929", "1930", "1931", "1932", "1933", "1934", "1935", "1936", "1937", "1938", "1939", "1940", "1941", "1942", "1943", "1944", "1945", "1946", "1947", "1948", "1949", "1950", "1951", "1952", "1953", "1954", "1955", "1956", "1957", "1958", "1959", "1960", "1961", "1962", "1963", "1964", "1965", "1966", "1967", "1968", "1969", "1970", "1971", "1972", "1973", "1974", "1975", "1976", "1977", "1978", "1979", "1980", "1981", "1982", "1983", "1984", "1985", "1986", "1987", "1988", "1989", "1990", "1991", "1992", "1993", "1994", "1995", "1996", "1997", "1998", "1999", "2000", "2001", "2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010", "2011" }));

        jlMarca.setText("Marca carro");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jlSexo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jrbMasculino)
                            .addComponent(jrbFeminino))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jlNome)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtNome, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jlSobrenome)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtSobrenome)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jlCnh)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtCnh, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jlRg)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtRg, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE)))
                        .addGap(41, 41, 41))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jbCadastrar)
                        .addGap(35, 35, 35)
                        .addComponent(jbVisualizar)
                        .addGap(37, 37, 37)
                        .addComponent(jbLimpar)
                        .addGap(132, 132, 132)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jlCpf)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtCpf, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jlMarca))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jcbDia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(20, 20, 20)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jcbMes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jcbAno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jlDatanascimento)
                        .addGap(140, 140, 140)
                        .addComponent(jcbMarca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(106, 106, 106))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 984, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jlRg)
                                    .addComponent(jtRg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jlCpf)
                                    .addComponent(jtCpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jlMarca))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jlDatanascimento)
                                    .addComponent(jcbMarca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jcbDia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jcbMes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jcbAno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jrbMasculino)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jrbFeminino))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jlNome)
                                        .addComponent(jtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jtSobrenome, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jlSobrenome)
                                        .addComponent(jlCnh)
                                        .addComponent(jtCnh, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(20, 20, 20))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addComponent(jlSexo)
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jbCadastrar)
                            .addComponent(jbVisualizar)
                            .addComponent(jbLimpar))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 495, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    /**
    *
    * MÃ©todo que tem finalidade de atualizar as informaÃ§Ãµes da tabela da interface
    * 
    * @version 2.3 beta
    * @author Matheus Souza da Silva
    * @since 04/05/2011
    * @exception Exception LanÃ§a uma excessao se algum erro ocorrer
    */
    private void AtualizarTabela()
    {
        try 
        {
            DefaultTableModel dtm = (DefaultTableModel) jTableCondutor.getModel();
            String[] linha = new String[9];

            NegCondutor tc = new   NegCondutor();
            ArrayList< PerCondutor> tb = new ArrayList< PerCondutor>();
            tb = tc.buscarTodosCondutores();

            //Zerar nÃºmero de linhas da tabela
            dtm.setNumRows(0);

            //Preenchimento da JTable
            for (int i=0 ; i<tb.size() ; i++) {
                linha[0] = Integer.toString(tb.get(i).getIdcondutor());
                linha[1] = tb.get(i).getSexo();
                linha[2] = tb.get(i).getNome();
                linha[3] = tb.get(i).getSobrenome();
                linha[4] = Integer.toString(tb.get(i).getRg());
                linha[5] = Integer.toString(tb.get(i).getCfp());
                linha[6] = (tb.get(i).getDatanascimento());
                linha[7] = Integer.toString(tb.get(i).getCnh());
                linha[8] = tb.get(i).getAutomovel().getPlaca();
                dtm.addRow(linha);
            }//for (int i=0 ; i<tb.size() ; i++) {

        } catch (Exception e) {
            JOptionPane.showMessageDialog(
                    this,
                    "Erro! "+e.getMessage());
        }//try
    }//private void AtualizarTabela()

    /**
    *
    * MÃ©todo que tem finalidade de limpar as propriedades da interface
    * 
    * @version 2.3 beta
    * @author Matheus Souza da Silva
    * @since 04/05/2011
    */
    public void Limpar()
    {
        jtNome.setText("");
        jtSobrenome.setText("");
        jtRg.setText("");
        jtCpf.setText("");
        jtCnh.setText("");
    }//public void Limpar()
    
    /**
    *
    * MÃ©todo que tem finalidade preencher a JComboBox
    * 
    * @version 2.3 beta
    * @author Matheus Souza da Silva
    * @since 04/05/2011
    * @exception Exception LanÃ§a uma excessao se algum erro ocorrer
    */
    private void preencheCombo()
    {
        try 
        {
            NegAutomovel mc = new NegAutomovel();
            ArrayList<PerAutomovel> aAux = new ArrayList<>(mc.buscarTodosAutomoveis());
            
            for (PerAutomovel aAux1 : aAux) {
                jcbMarca.addItem(aAux1.toString());
            } //for (int i=0; i<aAux.size(); i++) {

        } catch (Exception e) {
            JOptionPane.showMessageDialog(
                null,
                "Erro! "+e.getMessage()
            );
        }//try
    }//private void preencheCombo()
    
    /**
    *
    * MÃ©todo que tem finalidade de cadastrar o condutor
    * 
    * @version 2.3 beta
    * @author Matheus Souza da Silva
    * @since 04/05/2011
    * @exception Exception LanÃ§a uma excessao se algum erro ocorrer
    * @exception NumberFormatException LanÃ§a uma excessao se algum erro ocorrer
    * 
    */
    private void jbCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCadastrarActionPerformed
        try 
        {
            //se qualquer um dos campos  nÃ£o estiver vazio ele executa isto
            if (!jtNome.getText().isEmpty() && !jtSobrenome.getText().isEmpty() 
            && !jtRg.getText().isEmpty() && !jtCpf.getText().isEmpty() 
            && !jtCnh.getText().isEmpty()) {
                
            PerCondutor c = new PerCondutor();
            c.setSexo(bgSexo.getSelection().getActionCommand());
            c.setNome(jtNome.getText());
            c.setSobrenome(jtSobrenome.getText());
            c.setRg(Integer.parseInt(jtRg.getText()));
            c.setCfp(Integer.parseInt(jtCpf.getText()));

            String dia = (String) jcbDia.getSelectedItem();
            String mes = (String) jcbMes.getSelectedItem();
            String ano = (String) jcbAno.getSelectedItem();
            String data= dia+"/"+mes+"/"+ano;  
            c.setDatanascimento(data);
            c.setCnh(Integer.parseInt(jtCnh.getText()));

            //COERÃÃO!
            //CAST - Troca de tipo de dados forÃ§ada !!
            c.setAutomovel((PerAutomovel) jcbMarca.getSelectedItem());
            NegCondutor cc = new NegCondutor();
            cc.cadastrarCondutor(c);

            JOptionPane.showMessageDialog(null, "Condutor Cadastrado com Sucesso!");
            Limpar(); //limpa todos os JtextField
            AtualizarTabela(); //atualiza o Jtable
            
            } else { //do contrÃ¡rio ele mostra uma mensagem de erro
                JOptionPane.showMessageDialog(
                    this,
                    "Preencha Todos Os Campos!!!",
                    "Erro",
                    JOptionPane.ERROR_MESSAGE
                );
            }

         //exceÃ§Ã£o quamdo se digita Caracteres no lugar de numeros
        } catch (NumberFormatException nfe) {
            JOptionPane.showMessageDialog(
                this,
                "Dados Invalidos!\n"+nfe.getMessage(),
                "Erro ",
                JOptionPane.ERROR_MESSAGE
            );
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro! "+e.getMessage());
        }//try
    }//GEN-LAST:event_jbCadastrarActionPerformed

    /**
    *
    * MÃ©todo que tem finalidade de carregar na inteface as informaÃ§Ãµes da tabela da interface
    * 
    * @version 2.3 beta
    * @author Matheus Souza da Silva
    * @since 04/05/2011
    * @exception Exception LanÃ§a uma excessao se algum erro ocorrer
    */
    private void jbVisualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbVisualizarActionPerformed
        try 
        {
            NegCondutor mc = new NegCondutor();
            PerCondutor c = new PerCondutor();
            ArrayList<PerCondutor> cAux = new ArrayList<PerCondutor>();
            cAux = mc.buscarTodosCondutores();

            DefaultTableModel dtm=(DefaultTableModel)jTableCondutor.getModel();

            // CÃ³digo para zerar o nÃºmero de linhas da Tabela.
            dtm.setNumRows(0);

            String[] linha = new String[9];

            for (int i=0; i<cAux.size(); i++) {
                linha[0] = Integer.toString(cAux.get(i).getIdcondutor());
                linha[1] = cAux.get(i).getSexo();
                linha[2] = cAux.get(i).getNome();
                linha[3] = cAux.get(i).getSobrenome();
                linha[4] = Integer.toString(cAux.get(i).getRg());
                linha[5] = Integer.toString(cAux.get(i).getCfp());
                linha[6] = (cAux.get(i).getDatanascimento());
                linha[7] = Integer.toString(cAux.get(i).getCnh());
                linha[8] = cAux.get(i).getAutomovel().getPlaca();

                dtm.addRow(linha);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro! "+e.getMessage());
        }//try
}//GEN-LAST:event_jbVisualizarActionPerformed

    /**
    *
    * MÃ©todo que tem finalidade de limpar as propriedades da inteface
    * 
    * @version 2.3 beta
    * @author Matheus Souza da Silva
    * @since 04/05/2011
    */
    private void jbLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbLimparActionPerformed
        DefaultTableModel dtm = (DefaultTableModel)jTableCondutor.getModel();
        dtm.setNumRows(0); //Zerar nÃºmero de linhas da tabela
        Limpar(); //limpa todos os JtextField
}//GEN-LAST:event_jbLimparActionPerformed

    private void jcbMarcaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbMarcaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbMarcaActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup bgSexo;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableCondutor;
    private javax.swing.JButton jbCadastrar;
    private javax.swing.JButton jbLimpar;
    private javax.swing.JButton jbVisualizar;
    private javax.swing.JComboBox jcbAno;
    private javax.swing.JComboBox jcbDia;
    private javax.swing.JComboBox<String> jcbMarca;
    private javax.swing.JComboBox jcbMes;
    private javax.swing.JLabel jlCnh;
    private javax.swing.JLabel jlCpf;
    private javax.swing.JLabel jlDatanascimento;
    private javax.swing.JLabel jlMarca;
    private javax.swing.JLabel jlNome;
    private javax.swing.JLabel jlRg;
    private javax.swing.JLabel jlSexo;
    private javax.swing.JLabel jlSobrenome;
    private javax.swing.JRadioButton jrbFeminino;
    private javax.swing.JRadioButton jrbMasculino;
    private javax.swing.JTextField jtCnh;
    private javax.swing.JTextField jtCpf;
    private javax.swing.JTextField jtNome;
    private javax.swing.JTextField jtRg;
    private javax.swing.JTextField jtSobrenome;
    // End of variables declaration//GEN-END:variables
}