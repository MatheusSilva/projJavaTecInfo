/*
 * VisEndereco.java
 *
 * Created on 04/05/2011, 19:08:16
 */

package visao;
import negocio.NegCondutor;
import negocio.NegEndereco;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import persistencia.PerAutomovel;
import persistencia.PerEndereco;
import persistencia.PerCondutor;

/**
 * Classe VisEndereco da camada de visao
 * 
 * @version 2.3 beta
 * @author Matheus Souza da Silva
 * @since 04/05/2011
 */
public class VisEndereco extends javax.swing.JInternalFrame 
{
    /**
    *
    * Método construtor da camada de Endereco
    * 
    * @version 2.3 beta
    * @author Matheus Souza da Silva
    * @since 04/05/2011
    */
    public VisEndereco() 
    {
        initComponents();
        this.preencheCombo();
    }//public VisEndereco()

    /** This method is called from within the constructor to
    * initialize the form.
    * WARNING: Do NOT modify this code. The content of this method is
    * always regenerated by the Form Editor.
    */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jlNumero = new javax.swing.JLabel();
        jlEstado = new javax.swing.JLabel();
        jlEndereco = new javax.swing.JLabel();
        jtEndereco = new javax.swing.JTextField();
        jlLogradouro = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableEndereco = new javax.swing.JTable();
        jtLogradouro = new javax.swing.JTextField();
        jtNumero = new javax.swing.JTextField();
        jtComplemento = new javax.swing.JTextField();
        jtBairro = new javax.swing.JTextField();
        jcbCondutor = new javax.swing.JComboBox<String>();
        jlBairro = new javax.swing.JLabel();
        jlComplemento = new javax.swing.JLabel();
        jbCadastrar = new javax.swing.JButton();
        jbLimpar = new javax.swing.JButton();
        jbVisualizar = new javax.swing.JButton();
        jlCidade = new javax.swing.JLabel();
        jtCep = new javax.swing.JTextField();
        jlCep = new javax.swing.JLabel();
        jcbEstado = new javax.swing.JComboBox();
        jcbCidade = new javax.swing.JComboBox();
        jlCondutor = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Cadastro Endereço");
        setPreferredSize(new java.awt.Dimension(1000, 670));

        jlNumero.setText("Numero");

        jlEstado.setText("Estado");

        jlEndereco.setText("Endereço");

        jlLogradouro.setText("Logradouro");

        jTableEndereco.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo Endereço", "Endereço", "Logradouro", "Numero", "Complemento", "Bairro", "Estado", "Cidade", "Cep", "Nome"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTableEndereco);

        jcbCondutor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbCondutorActionPerformed(evt);
            }
        });

        jlBairro.setText("Bairro");

        jlComplemento.setText("Complemento");

        jbCadastrar.setText("Cadastrar");
        jbCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCadastrarActionPerformed(evt);
            }
        });

        jbLimpar.setText("Limpar");
        jbLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbLimparActionPerformed(evt);
            }
        });

        jbVisualizar.setText("Visualizar");
        jbVisualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbVisualizarActionPerformed(evt);
            }
        });

        jlCidade.setText("Cidade");

        jlCep.setText("Cep");

        jcbEstado.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "AC", "AL", "AP", "AM", "BA", "CE", "DF", "GO", "ES", "MA", "MT", "MS", "MG", "PA", "PB", "PR", "PE", "PI", "RJ", "RN", "RS", "RO", "RR", "SP", "SC", "SE" }));

        jcbCidade.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Agua Santa", "Agudo", "Ajuricaba", "Alecrim", "Alegrete", "Alegria", "Alpestre", "Alto Alegre", "Alto Feliz", "Alvorada", "Amaral Ferrador", "Ametista do Sul", "Andre da Rocha", "Anta Gorda", "Antonio Prado", "Arambare", "Ararica", "Aratiba", "Arroio Grande", "Arroio do Meio", "Arroio do Sal", "Arroio do Tigre", "Arroio dos Ratos", "Arvorezinha", "Augusto Pestana", "Aurea", "Bage", "Balneario Pinhal", "Barao de Cotegipe", "Barao do Triunfo", "Barao", "Barra Funda", "Barra do Guarita", "Barra do Quarai", "Barra do Ribeiro", "Barra do Rio Azul", "Barracao", "Barros Cassal", "Benjamin Constant do Sul", "Bento Goncalves", "Boa Vista das Missoes", "Boa Vista do Burica", "Boa Vista do Sul", "Bom Jesus", "Bom Principio", "Bom Progresso", "Bom Retiro do Sul", "Boqueirao do Leao", "Bossoroca", "Braga", "Brochier", "Butia", "Cacapava do Sul", "Cacequi", "Cachoeira do Sul", "Cachoeirinha", "Cacique Doble", "Caibate", "Caicara", "Camaqua", "Camargo", "Cambara do Sul", "Campestre da Serra", "Campina das Missoes", "Campinas do Sul", "Campo Bom", "Campo Novo", "Campos Borges", "Candelaria", "Candido Godoi", "Candiota", "Canela", "Cangucu", "Canoas", "Capao da Canoa", "Capao do Leao", "Capela de Santana", "Capitao", "Capivari do Sul", "Caraa", "Carazinho", "Carlos Barbosa", "Carlos Gomes", "Casca", "Caseiros", "Catuipe", "Caxias do Sul", "Centenario", "Cerrito", "Cerro Branco", "Cerro Grande do Sul", "Cerro Grande", "Cerro Largo", "Chapada", "Charqueadas", "Charrua", "Chiapeta", "Chui", "Chuvisca", "Cidreira", "Ciriaco", "Colinas", "Colorado", "Condor", "Constantina", "Coqueiros do Sul", "Coronel Barros", "Coronel Bicaco", "Cotipora", "Coxilha", "Crissiumal", "Cristal do Sul", "Cristal", "Cruz Alta", "Cruzeiro do Sul", "David Canabarro", "Derrubadas", "Dezesseis de Novembro", "Dilermano de Aguiar", "Dois Irmaos das Missoes", "Dois Irmaos", "Dois Lajeados", "Dom Feliciano", "Dom Pedrito", "Dom Pedro de Alcantara", "Dona Francisca", "Doutor Mauricio Cardoso", "Doutor Ricardo", "Eldorado do Sul", "Encantado", "Encruzilhada do Sul", "Engenho Velho", "Entre Rios do Sul", "Entre-Ijuis", "Erebango", "Erechim", "Ernestina", "Erval Grande", "Erval Seco", "Esmeralda", "Esperanca do Sul", "Espumoso", "Estacao", "Estancia Velha", "Esteio", "Estrela Velha", "Estrela", "Eugenio de Castro", "Fagundes Varela", "Farroupilha", "Faxinal do Soturno", "Faxinalzinho", "Fazenda Vilanova", "Feliz", "Flores da Cunha", "Floriano Peixoto", "Fontoura Xavier", "Formigueiro", "Fortaleza dos Valos", "Frederico Westphalen", "Garibaldi", "Garruchos", "Gaurama", "General Camara", "Gentil", "Getulio Vargas", "Girua", "Glorinha", "Gramado Xavier", "Gramado dos Loureiros", "Gramado", "Gravatai", "Guabiju", "Guaiba", "Guapore", "Guarani das Missoes", "Harmonia", "Herval", "Herveiras", "Horizontina", "Hulha Negra", "Humaita", "Ibarama", "Ibiaca", "Ibiraiaras", "Ibirapuita", "Ibiruba", "Igrejinha", "Ijui", "Ilopolis", "Imbe", "Imigrante", "Independencia", "Inhacora", "Ipe", "Ipiranga do Sul", "Irai", "Itaara", "Itacurubi", "Itapuca", "Itaqui", "Itatiba do Sul", "Ivora", "Ivoti", "Jaboticaba", "Jacutinga", "Jaguarao", "Jaguari", "Jaquirana", "Jari", "Joia", "Julio de Castilhos", "Lagoa Vermelha", "Lagoa dos Tres Cantos", "Lagoao", "Lajeado do Bugre", "Lajeado", "Lavras do Sul", "Liberato Salzano", "Lindolfo Collor", "Linha Nova", "Macambara", "Machadinho", "Mampituba", "Manoel Viana", "Maquine", "Marata", "Marau", "Marcelino Ramos", "Mariana Pimentel", "Mariano Moro", "Marques de Souza", "Mata", "Mato Castelhano", "Mato Leitao", "Maximiliano de Almeida", "Minas do Leao", "Miraguai", "Montauri", "Monte Alegre dos Campos", "Monte Belo do Sul", "Montenegro", "Mormaco", "Morrinhos do Sul", "Morro Redondo", "Morro Reuter", "Mostardas", "Mucum", "Muitos Capoes", "Muliterno", "Nao-Me-Toque", "Nicolau Vergueiro", "Nonoai", "Nova Alvorada", "Nova Araca", "Nova Bassano", "Nova Boa Vista", "Nova Brescia", "Nova Candelaria", "Nova Esperanca do Sul", "Nova Hartz", "Nova Padua", "Nova Palma", "Nova Petropolis", "Nova Prata", "Nova Ramada", "Nova Roma do Sul", "Nova Santa Rita", "Novo Barreiro", "Novo Cabrais", "Novo Hamburgo", "Novo Machado", "Novo Tiradentes", "Osorio", "Paim Filho", "Palmares do Sul", "Palmeira das Missoes", "Palmitinho", "Panambi", "Pantano Grande", "Parai", "Paraiso do Sul", "Pareci Novo", "Parobe", "Passa Sete", "Passo Fundo", "Passo do Sobrado", "Paverama", "Pedro Osorio", "Pejucara", "Pelotas", "Picada Cafe", "Pinhal Grande", "Pinhal", "Pinheirinho do Vale", "Pinheiro Machado", "Pirapo", "Piratini", "Planalto", "Poco das Antas", "Pontao", "Ponte Preta", "Portao", "Porto Alegre", "Porto Lucena", "Porto Maua", "Porto Vera Cruz", "Porto Xavier", "Pouso Novo", "Presidente Lucena", "Progresso", "Protasio Alves", "Putinga", "Quarai", "Quevedos", "Quinze de Novembro", "Redentora", "Relvado", "Restinga Seca", "Rio Grande", "Rio Pardo", "Rio dos Indios", "Riozinho", "Roca Sales", "Rodeio Bonito", "Rolante", "Ronda Alta", "Rondinha", "Roque Gonzales", "Rosario do Sul", "Sagrada Familia", "Saldanha Marinho", "Salto do Jacui", "Salvador das Missoes", "Salvador do Sul", "Sananduva", "Santa Barbara do Sul", "Santa Clara do Sul", "Santa Cruz do Sul", "Santa Maria do Herval", "Santa Maria", "Santa Rosa", "Santa Tereza", "Santa Vitoria do Palmar", "Santana da Boa Vista", "Santana do Livramento", "Santiago", "Santo Angelo", "Santo Antonio da Patrulha", "Santo Antonio das Missoes", "Santo Antonio do Palma", "Santo Antonio do Planalto", "Santo Augusto", "Santo Cristo", "Santo Expedito do Sul", "Sao Borja", "Sao Domingos do Sul", "Sao Francisco de Assis", "Sao Francisco de Paula", "Sao Gabriel", "Sao Jeronimo", "Sao Joao da Urtiga", "Sao Joao do Polesine", "Sao Jorge", "Sao Jose das Missoes", "Sao Jose do Herval", "Sao Jose do Hortencio", "Sao Jose do Inhacora", "Sao Jose do Norte", "Sao Jose do Ouro", "Sao Jose dos Ausentes", "Sao Leopoldo", "Sao Lourenco do Sul", "Sao Luiz Gonzaga", "Sao Marcos", "Sao Martinho da Serra", "Sao Martinho", "Sao Miguel das Missoes", "Sao Nicolau", "Sao Paulo das Missoes", "Sao Pedro da Serra", "Sao Pedro do Butia", "Sao Pedro do Sul", "Sao Sebastiao do Cai", "Sao Sepe", "Sao Valentim do Sul", "Sao Valentim", "Sao Valerio do Sul", "Sao Vendelino", "Sao Vicente do Sul", "Sapiranga", "Sapucaia do Sul", "Sarandi", "Seberi", "Sede Nova", "Segredo", "Selbach", "Senador Salgado Filho", "Sentinela do Sul", "Serafina Correa", "Serio", "Sertao Santana", "Sertao", "Sete de Setembro", "Severiano de Almeida", "Silveira Martins", "Sinimbu", "Sobradinho", "Soledade", "Tabai", "Tapejara", "Tapera", "Tapes", "Taquara", "Taquari", "Taquarucu do Sul", "Tavares", "Tenente Portela", "Terra de Areia", "Teutonia", "Tiradentes do Sul", "Toropi", "Torres", "Tramandai", "Travesseiro", "Tres Arroios", "Tres Cachoeiras", "Tres Coroas", "Tres Forquilhas", "Tres Palmeiras", "Tres Passos", "Tres de Maio", "Trindade do Sul", "Triunfo", "Tucunduva", "Tunas", "Tupanci do Sul", "Tupancireta", "Tupandi", "Tuparendi", "Turucu", "Ubiretama", "Uniao da Serra", "Unistalda", "Uruguaiana", "Vacaria", "Vale Real", "Vale Verde", "Vale do Sol", "Vanini", "Venancio Aires", "Vera Cruz", "Veranopolis", "Vespasiano Correa", "Viadutos", "Viamao", "Vicente Dutra", "Victor Graeff", "Vila Flores", "Vila Langaro", "Vila Maria", "Vila Nova do Sul", "Vista Alegre do Prata", "Vista Alegre", "Vista Gaucha", "Vitoria das Missoes", "Xangri-la" }));

        jlCondutor.setText("Condutor");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jbCadastrar)
                            .addComponent(jbVisualizar)
                            .addComponent(jcbCondutor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jbLimpar))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jlEstado)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jcbEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jlBairro)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtBairro, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jlCep)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtCep, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jlCidade)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jcbCidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jlComplemento)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtComplemento, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jlNumero)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jlLogradouro)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtLogradouro))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jlEndereco)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jtEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jlCondutor)))
                .addGap(163, 163, 163)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 611, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlEndereco)
                            .addComponent(jtEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlLogradouro)
                            .addComponent(jtLogradouro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlNumero)
                            .addComponent(jtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlComplemento)
                            .addComponent(jtComplemento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtBairro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlBairro))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jlEstado)
                            .addComponent(jcbEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jlCidade)
                            .addComponent(jcbCidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtCep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jlCep))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jlCondutor)
                        .addGap(8, 8, 8)
                        .addComponent(jcbCondutor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jbCadastrar)
                        .addGap(12, 12, 12)
                        .addComponent(jbVisualizar)
                        .addGap(31, 31, 31)
                        .addComponent(jbLimpar))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 605, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
    *
    * Método que tem finalidade de atualizar as informações da tabela da interface
    * 
    * @version 2.3 beta
    * @author Matheus Souza da Silva
    * @since 04/05/2011
    * @exception Exception Lança uma excessao se algum erro ocorrer
    */
    private void AtualizarTabela() 
    {
        try {
            DefaultTableModel dtm = (DefaultTableModel) jTableEndereco.getModel();
            String[] linha = new String[10];

            NegEndereco tc = new NegEndereco();
            ArrayList<PerEndereco> tb = new ArrayList<PerEndereco>();
            tb = tc.buscarTodosEnderecos();

            //Zerar número de linhas da tabela
            dtm.setNumRows(0);

            //Preenchimento da JTable
            for (int i=0; i<tb.size(); i++) {
                linha[0] = Integer.toString(tb.get(i).getIdendereco());
                linha[1] = tb.get(i).getEndereco();
                linha[2] = tb.get(i).getLogradouro();
                linha[3] = Integer.toString(tb.get(i).getNumero());
                linha[4] = tb.get(i).getComplemento();
                linha[5] = tb.get(i).getBairro();
                linha[6] = tb.get(i).getEstado();
                linha[7] = tb.get(i).getCidade();
                linha[8] = Integer.toString(tb.get(i).getCep());
                linha[9] = tb.get(i).getCondutor().getNome();
                dtm.addRow(linha);
            }//for (int i=0; i<tb.size(); i++) {

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro! "+e.getMessage());
        }//try
    }//private void AtualizarTabela()
    
    /**
    *
    * Método que tem finalidade de limpar as propriedades da interface
    * 
    * @version 2.3 beta
    * @author Matheus Souza da Silva
    * @since 04/05/2011
    */
    public void Limpar()
    {
        jtEndereco.setText("");
        jtLogradouro.setText("");
        jtNumero.setText("");
        jtComplemento.setText("");
        jtBairro.setText("");
        jtCep.setText("");
    }//public void Limpar()

    /**
    *
    * Método que tem finalidade preencher a JComboBox
    * 
    * @version 2.3 beta
    * @author Matheus Souza da Silva
    * @since 04/05/2011
    */
    private void preencheCombo()
    {
        try 
        {
            NegCondutor cc = new NegCondutor();
            ArrayList<PerCondutor> cAux = new ArrayList<>(cc.buscarTodosCondutores());
            
            for (PerCondutor cAux1 : cAux) {
                jcbCondutor.addItem(cAux1.toString());
            } //for (int i=0; i<aAux.size(); i++) {
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro! "+e.getMessage());
        }//try
    }//private void preencheCombo()
    
    /**
    *
    * Método que tem finalidade de cadastrar o endereco
    * 
    * @version 2.3 beta
    * @author Matheus Souza da Silva
    * @since 04/05/2011
    * @exception Exception Lança uma excessao se algum erro ocorrer
    * @exception NumberFormatException Lança uma excessao se algum erro ocorrer
    */
    private void jbCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCadastrarActionPerformed
        try 
        { 
            //se qualquer um dos campos  não estiver vazio ele executa isto
            if (!jtEndereco.getText().isEmpty() && !jtLogradouro.getText().isEmpty() 
            && !jtNumero.getText().isEmpty() && !jtComplemento.getText().isEmpty()
            && !jtBairro.getText().isEmpty()) {
                PerEndereco e = new PerEndereco();
                e.setEndereco(jtEndereco.getText());
                e.setLogradouro(jtLogradouro.getText());
                e.setNumero(Integer.parseInt(jtNumero.getText()));
                e.setComplemento(jtComplemento.getText());
                e.setBairro(jtBairro.getText());
                e.setEstado(jcbEstado.getSelectedItem().toString());
                e.setCidade(jcbCidade.getSelectedItem().toString());
                e.setCep(Integer.parseInt(jtCep.getText()));
            
                //COERÇÃO!
                //CAST - Troca de tipo de dados forçada !!
            
                e.setCondutor((PerCondutor) jcbCondutor.getSelectedItem());
                NegEndereco ec = new NegEndereco();
                ec.cadastrarEndereco(e);

                JOptionPane.showMessageDialog(null, "Endereço Cadastrado com Sucesso!");
                Limpar();
                AtualizarTabela();
            } else { 
                //se não ele mostra um mensagem de erro 
                JOptionPane.showMessageDialog(
                    this,
                    "Preencha Todos Os Campos!!!",
                    "Erro",
                    JOptionPane.ERROR_MESSAGE
                );
            }

        } catch (NumberFormatException nfe) {
            JOptionPane.showMessageDialog(
                this,
                "Dados Invalidos!\n"+nfe.getMessage(),
                "Erro ",
                JOptionPane.ERROR_MESSAGE
            );
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro! "+e.getMessage());
        }//try
    }//GEN-LAST:event_jbCadastrarActionPerformed

    /**
    *
    * Método que tem finalidade de limpar tabela da interface e as propriedades
    * 
    * @version 2.3 beta
    * @author Matheus Souza da Silva
    * @since 04/05/2011
    */
    private void jbLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbLimparActionPerformed
        DefaultTableModel dtm = (DefaultTableModel)jTableEndereco.getModel();
        dtm.setNumRows(0); //Zerar número de linhas da tabela
        Limpar(); //chama o metodo limpar
}//GEN-LAST:event_jbLimparActionPerformed

    /**
    *
    * Método que tem finalidade de carregar na inteface as informações da tabela da interface
    * 
    * @version 2.3 beta
    * @author Matheus Souza da Silva
    * @since 04/05/2011
    * @exception Exception Lança uma excessao se algum erro ocorrer
    */
    private void jbVisualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbVisualizarActionPerformed
        try 
        {
            NegEndereco mc = new NegEndereco();
            PerCondutor c = new PerCondutor();
            ArrayList<PerEndereco> eAux = new ArrayList<PerEndereco>();
            eAux = mc.buscarTodosEnderecos();

            DefaultTableModel dtm=(DefaultTableModel)jTableEndereco.getModel();

            // Código para zerar o número de linhas da Tabela.
            dtm.setNumRows(0);

            String[] linha = new String[10];

            for (int i=0 ; i<eAux.size() ; i++) {
                linha[0] = Integer.toString(eAux.get(i).getIdendereco());
                linha[1] = eAux.get(i).getEndereco();
                linha[2] = eAux.get(i).getLogradouro();
                linha[3] = Integer.toString(eAux.get(i).getNumero());
                linha[4] = eAux.get(i).getComplemento();
                linha[5] = eAux.get(i).getBairro();
                linha[6] = eAux.get(i).getEstado();
                linha[7] = eAux.get(i).getCidade();
                linha[8] = Integer.toString(eAux.get(i).getCep());
                linha[9] = eAux.get(i).getCondutor().getNome();

                dtm.addRow(linha);
            }//for (int i=0 ; i<eAux.size() ; i++) {
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro! "+e.getMessage());
        }//try
}//GEN-LAST:event_jbVisualizarActionPerformed

    private void jcbCondutorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbCondutorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbCondutorActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableEndereco;
    private javax.swing.JButton jbCadastrar;
    private javax.swing.JButton jbLimpar;
    private javax.swing.JButton jbVisualizar;
    private javax.swing.JComboBox jcbCidade;
    private javax.swing.JComboBox<String> jcbCondutor;
    private javax.swing.JComboBox jcbEstado;
    private javax.swing.JLabel jlBairro;
    private javax.swing.JLabel jlCep;
    private javax.swing.JLabel jlCidade;
    private javax.swing.JLabel jlComplemento;
    private javax.swing.JLabel jlCondutor;
    private javax.swing.JLabel jlEndereco;
    private javax.swing.JLabel jlEstado;
    private javax.swing.JLabel jlLogradouro;
    private javax.swing.JLabel jlNumero;
    private javax.swing.JTextField jtBairro;
    private javax.swing.JTextField jtCep;
    private javax.swing.JTextField jtComplemento;
    private javax.swing.JTextField jtEndereco;
    private javax.swing.JTextField jtLogradouro;
    private javax.swing.JTextField jtNumero;
    // End of variables declaration//GEN-END:variables

}
